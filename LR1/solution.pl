% Первая часть задания - предикаты работы со списками

% 3.Реализация стандартных предикатов обработки списков

% Предикат длины списка
% Формат ввода: (список, длина)
mlength([], 0) . 
mlength([_|T], N) :- mlength(T, N1), N is N1 + 1.

% Предикат принадлежности элемента списку
% Формат ввода: (элемент, список)
mmember(X,[X|L]).
mmember(X,[L|T]) :- mmember(X,T).

% Предикат конкатенации списков
% Формат ввода: (список1, список2, список1+2)
mappend([],L,L).
mappend([H|T], L, [H|R]) :- mappend(T,L,R).

% Предикат удаления элементов из списка
% Формат ввода: (элемент, список, список без элемента)
mremove(E,[E|S],S).
mremove(E,[E1|S],[E1|X]) :- mremove(E,S,X).

% Предикат перестановки элементов списка
% Формат ввода: (список, перестановка)
mpermute([],[]).
mpermute(S,[L|Y]) :-
    mremove(L,S,X),
    mpermute(X,Y).

% Предикат подсписка списка
% Формат ввода: (подсписок, список)
msublist(X,Y) :-
    mappend(S,L,M),
    mappend(X,S,L).

% 4(1). Реализация предиката обработки числового списка (списков): 
% Получение последнего элемента

% - с использованием встроенных предикатов
% Формат ввода: (список, последний элемент)

getlast(L, X) :- append(_,[X],L).

    
% - без использования встроенных предикатов
% Формат ввода: (список, последний элемент)

mgetlast([X], X).
mgetlast([_|L], X) :- mgetlast(L, X).

% 5(5). Реализация предиката обработки числового списка (списков):
% Вычисление суммы элементов

% Формат ввода: (вектор-список, длина)

msum([], 0).
msum([X|T], N) :- msum(T, N1), N is N1 + X.

% 6. Пример совместного использования предикатов
% Предикат для нахождение длины списка до и после удаления последнего элемента и вывод последнего элемента
% Формат ввода: (список, длина до удаления, последний эл-т, длина после удаления)
coop(L, X1, P, X2):-
    mlength(L,X1),
    mgetlast(L, P),
    mremove(P, L, L1),
    mlength(L1, X2).